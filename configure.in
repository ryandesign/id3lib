# $Id$

# Copyright 1999 Scott Thomas Haug <sth2@cs.wustl.edu>
#  
# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without 
# modifications, as long as this notice is preserved.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

# require autoconf 2.13
AC_PREREQ(2.13)

# init autoconf (and check for presence fo reconf)
AC_INIT(reconf)

dnl The following has been adapted from glib (http://www.gtk.org)
dnl
dnl we need to AC_DIVERT_PUSH/AC_DIVERT_POP these variable definitions so they
dnl are available for $ac_help expansion (don't we all *love* autoconf?)
AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)dnl
# Making releases:
#   ID3LIB_MICRO_VERSION += 1;
#   ID3LIB_INTERFACE_AGE += 1;
#   ID3LIB_BINARY_AGE += 1;
# if any functions have been added, set ID3LIB_INTERFACE_AGE to 0.
# if backwards compatibility has been broken,
# set ID3LIB_BINARY_AGE _and_ ID3LIB_INTERFACE_AGE to 0.
#
ID3LIB_MAJOR_VERSION=3
ID3LIB_MINOR_VERSION=0
ID3LIB_MICRO_VERSION=6
ID3LIB_INTERFACE_AGE=6
ID3LIB_BINARY_AGE=6
ID3LIB_VERSION=$ID3LIB_MAJOR_VERSION.$ID3LIB_MINOR_VERSION.$ID3LIB_MICRO_VERSION
AC_DIVERT_POP()dnl

AC_SUBST(ID3LIB_MAJOR_VERSION)
AC_SUBST(ID3LIB_MINOR_VERSION)
AC_SUBST(ID3LIB_MICRO_VERSION)
AC_SUBST(ID3LIB_VERSION)
AC_SUBST(ID3LIB_INTERFACE_AGE)
AC_SUBST(ID3LIB_BINARY_AGE)

# libtool versioning
LT_RELEASE=$ID3LIB_MAJOR_VERSION.$ID3LIB_MINOR_VERSION
LT_CURRENT=`expr $ID3LIB_MICRO_VERSION - $ID3LIB_INTERFACE_AGE`
LT_REVISION=$ID3LIB_INTERFACE_AGE
LT_AGE=`expr $ID3LIB_BINARY_AGE - $ID3LIB_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

VERSION=$ID3LIB_VERSION
PACKAGE=id3lib

dnl This is a hack to get the release date using cvs checkin macros
ID3LIB_RELEASE_DATE="$Date$ID3LIB_UNDEFINED"

AM_INIT_AUTOMAKE($PACKAGE,$VERSION)
AM_CONFIG_HEADER(config.h)

AC_DEFINE_UNQUOTED(ID3LIB_MAJOR_VERSION, $ID3LIB_MAJOR_VERSION)
AC_DEFINE_UNQUOTED(ID3LIB_MINOR_VERSION, $ID3LIB_MINOR_VERSION)
AC_DEFINE_UNQUOTED(ID3LIB_MICRO_VERSION, $ID3LIB_MICRO_VERSION)
AC_DEFINE_UNQUOTED(ID3LIB_INTERFACE_AGE, $ID3LIB_INTERFACE_AGE)
AC_DEFINE_UNQUOTED(ID3LIB_BINARY_AGE,    $ID3LIB_BINARY_AGE)

dnl Initialize libtool
AM_PROG_LIBTOOL

dnl Initialize maintainer mode
AM_MAINTAINER_MODE

AC_CANONICAL_HOST

dnl figure debugging default, prior to $ac_help setup
dnl
AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)dnl
if test `expr $ID3LIB_MINOR_VERSION \% 2` = 1 ; then
        debug_default=yes
else
        debug_default=minimum
fi
AC_DIVERT_POP()dnl

dnl declare --enable-* args and collect ac_help strings
AC_ARG_ENABLE(debug, [  --enable-debug=[no/minimum/yes] turn on debugging [default=$debug_default]],,enable_debug=$debug_default)
AC_ARG_ENABLE(ansi, [  --enable-ansi           turn on strict ansi [default=no]],
		    , enable_ansi=no)

if test "x$enable_debug" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -g"
  ID3LIB_DEBUG_FLAGS="-DID3_ENABLE_DEBUG"
else
  if test "x$enable_debug" = "xno"; then
    ID3LIB_DEBUG_FLAGS="-DID3_DISABLE_ASSERT -DID3_DISABLE_CHECKS"
  fi
fi

dnl 
AC_SUBST(ID3LIB_DEBUG_FLAGS)

dnl Checks for programs
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_RANLIB
AC_PROG_INSTALL

dnl Checks for libraries.
AC_CHECK_LIB(z,uncompress,,
  AC_MSG_ERROR([id3lib requires zlib to process compressed frames]))

dnl Checks for header files.
AC_HEADER_STDC
AC_HAVE_HEADERS(                \
  ctype.h                       \
  limits.h                      \
  memory.h                      \
  stdio.h                       \
  unistd.h                      \
  wchar.h                       \
  zlib.h                        \
  sys/param.h                   \
  ,,AC_MSG_ERROR([Missing a vital header file for id3lib])
)
AC_LANG_SAVE
AC_LANG_CPLUSPLUS
AC_HAVE_HEADERS(                \
  iostream.h                    \
  ,,AC_MSG_ERROR([Missing a vital header file for id3lib])
)

dnl Check for functions.
AC_FUNC_MEMCMP
AC_HAVE_FUNCS(
  ftruncate                     \
  ,,AC_MSG_ERROR([Missing a vital function for id3lib])
)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_SIZE_T

dnl
dnl Checks with local macros
dnl

dnl Checks for the portability of certain c++ features: the bool type and
dnl for-loop scoping
LF_CXX_PORTABILITY

dnl Provides a --with-warnings option to the configure script that turns on
dnl compiler warnings.  Must be used AFTER configuring ALL compilers.
LF_SET_WARNINGS

dnl ACCONFIG TEMPLATE
dnl 
dnl /* config.h defines these preprocesser symbols to be used by id3lib for
dnl  * determining internal versioning information.  The intent is that these
dnl  * macros will be made available int the library via functions or static
dnl  * methods.
dnl  */
dnl /* Defines which major version of id3lib is being used (int) */
dnl #undef ID3LIB_MAJOR_VERSION
dnl /* Defines which minor version of id3lib is being used (int) */
dnl #undef ID3LIB_MINOR_VERSION
dnl /* Defines which micro version (or patch) of id3lib is being used (int) */
dnl #undef ID3LIB_MICRO_VERSION
dnl /* */
dnl #undef ID3LIB_INTERFACE_AGE
dnl /* */
dnl #undef ID3LIB_BINARY_AGE
dnl /* The date of this id3lib release */
dnl #undef ID3LIB_DATE
dnl /* The identifying string of this id3lib */
dnl #undef ID3LIB_FULLNAME
dnl /* */
dnl #undef ID3_COMPILED_WITH_DEBUGGING
dnl /* */
dnl END ACCONFIG

AC_DEFINE_UNQUOTED(ID3LIB_MAJOR_VERSION, $ID3LIB_MAJOR_VERSION)
AC_DEFINE_UNQUOTED(ID3LIB_MINOR_VERSION, $ID3LIB_MINOR_VERSION)
AC_DEFINE_UNQUOTED(ID3LIB_MICRO_VERSION, $ID3LIB_MICRO_VERSION)
AC_DEFINE_UNQUOTED(ID3LIB_INTERFACE_AGE, $ID3LIB_INTERFACE_AGE)
AC_DEFINE_UNQUOTED(ID3LIB_BINARY_AGE, $ID3LIB_BINARY_AGE)
AC_DEFINE_UNQUOTED(ID3LIB_FULLNAME, "$PACKAGE-$ID3LIB_RELEASE")
AC_DEFINE_UNQUOTED(ID3_COMPILED_WITH_DEBUGGING, "${enable_debug}")

AC_OUTPUT(                      \
  Makefile                      \
  doc/Makefile                  \
  doc/html/Makefile             \
  doc/man/Makefile              \
  doc/latex/Makefile            \
  doc/texinfo/Makefile          \
  include/Makefile              \
  include/id3/Makefile          \
  m4/Makefile                   \
  prj/Makefile                  \
  src/Makefile                  \
  src/id3/Makefile              \
  src/examples/Makefile         \
  zlib/Makefile                 \
  zlib/include/Makefile         \
  zlib/lib/Makefile             \
  zlib/prj/Makefile             \
  zlib/src/Makefile             \
)

# $Log$
# Revision 1.14  2000/01/04 16:38:15  eldamitri
# Removed AC_C_CONST and AC_C_INLINE checks, since we're using a C++ compiler
# and these check against the C compiler.
#
# Revision 1.13  1999/12/27 06:15:35  scott
# Changed release information from 3.6.2 to 3.0.6, to prepare for
# future MusicMatch release to happen Real Soon Now.
#
# Revision 1.12  1999/12/13 05:26:20  scott
# (AC_HAVE_HEADERS): Added check for sys/param.h.
#
# Revision 1.11  1999/12/03 00:47:51  scott
# (id3lib_patch): Upped to 2 for new release 3.6.2
# (AC_OUTPUT): Added Makefiles for prj and zlib and its subdirs
#
# Revision 1.10  1999/12/01 19:13:10  scott
# Upped the patch number to 1.
#
# Revision 1.9  1999/12/01 18:12:52  scott
# (AC_OUTPUT): Added include/Makefile and include/id3/Makefile
#
# Revision 1.8  1999/11/30 20:01:36  scott
# * configure.in:
# Minor modifications.  Removed call to SH_SIZE_SPECIFIC_TYPES---these
# types are now defined in src/id3/sized_types.h.  Removed ID3LIB_NAME
# macro (same as PACKAGE).  Removed ID3LIB_RELEASE macro (same as
# VERSION).  Renamed ID3LIB_IDSTRING to ID3LIB_FULLNAME and removed
# the date part of it.
#
# Revision 1.7  1999/11/30 14:25:49  scott
# Generalized versioning mechanism so it only has to be changed in this
# file to be propagated throughout rest of source code.  Used a hack to
# make libtool version coincide with release versioning.  This is
# expressly warned against in the libtool docs, so it might be changed.
# However, it also seems to be a common practice amongst other library
# writers, so I'm torn.  Added versioning macro definitions normally
# found in version.h.  Probably not the best place for this...
#

